{"version":3,"sources":["redux/actions.js","components/Filter/Filter.js","redux/contactsSlice.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["actions","setFilter","createAction","connect","state","filter","dispatch","filterInputId","shortid","generate","htmlFor","id","type","name","value","pattern","title","onChange","e","currentTarget","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","url","method","body","phone","invalidatesTags","deleteContact","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","ContactForm","useState","setName","number","setNumber","nameInputId","useRef","numberInputId","isLoading","onSubmit","preventDefault","className","required","disabled","color","height","width","ContactListItem","el","deleteIsLoading","onClick","data","contactsIsLoading","obj","toLowerCase","includes","map","App","filterReducer","createReducer","action","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAMeA,EAFC,CAAEC,UAFAC,uBAAa,uB,OCqB/B,IAYeC,eAZS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMC,WAIS,SAACC,GAC1B,MAAO,CACLL,UAAW,SAACI,GAAD,OAAYC,EAASN,EAAQC,UAAUI,QAIvCF,EA9Bf,YAAwC,IAAtBE,EAAqB,EAArBA,OAAQJ,EAAa,EAAbA,UAClBM,EAAgBC,IAAQC,WAC9B,OACE,gCACE,uBAAOC,QAASH,EAAhB,mCACA,uBACEI,GAAIJ,EACJK,KAAK,OACLC,KAAK,SACLC,MAAOT,EACPU,QAAQ,yHACRC,MAAM,qcACNC,SAAU,SAACC,GAAD,OAAOjB,EAAUiB,EAAEC,cAAcL,gB,uCCftCM,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,uDAEXC,SAAU,CAAC,YACXC,UAAW,SAACC,GAAD,MAAc,CACvBC,YAAaD,EAAQE,MAAM,CACzBA,MAAO,8BACPC,aAAc,CAAC,cAEjBC,WAAYJ,EAAQK,SAAS,CAC3BH,MAAO,kBAAsB,CAC3BI,IAAK,YACLC,OAAQ,OACRC,KAAM,CAAEvB,KAHH,EAAGA,KAGMwB,MAHT,EAASA,SAKhBC,gBAAiB,CAAC,cAEpBC,cAAeX,EAAQK,SAAS,CAC9BH,MAAO,SAACnB,GAAD,MAAS,CACduB,IAAI,aAAD,OAAevB,GAClBwB,OAAQ,WAEVG,gBAAiB,CAAC,kBAMtBE,EAGEpB,EAHFoB,oBACAC,EAEErB,EAFFqB,sBACAC,EACEtB,EADFsB,yBC6BaC,MA1Df,WACE,MAAwBC,mBAAS,IAAjC,mBAAO/B,EAAP,KAAagC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAcC,iBAAOzC,IAAQC,YAC7ByC,EAAgBD,iBAAOzC,IAAQC,YACrC,EAAoCgC,IAApC,mBAAOT,EAAP,KAAqBmB,EAArB,KAAqBA,UASrB,OACE,uBAAMC,SARa,SAAClC,GACpBA,EAAEmC,iBACFrB,EAAW,CAAEnB,OAAMwB,MAAOS,IAC1BD,EAAQ,IACRE,EAAU,KAIV,UACE,sBAAKO,UAAU,gBAAf,UACE,uBAAO5C,QAASsC,EAAhB,kBACA,uBACErC,GAAIqC,EACJpC,KAAK,OACLC,KAAK,OACLC,MAAOD,EACPE,QAAQ,yHACRC,MAAM,qcACNuC,UAAQ,EACRtC,SAAU,SAACC,GACT2B,EAAQ3B,EAAEC,cAAcL,aAI9B,sBAAKwC,UAAU,gBAAf,UACG,IACD,uBAAO5C,QAASwC,EAAhB,oBACA,uBACEvC,GAAIuC,EACJtC,KAAK,MACLC,KAAK,SACLC,MAAOgC,EACP/B,QAAQ,yFACRC,MAAM,giBACNuC,UAAQ,EACRtC,SAAU,SAACC,GACT6B,EAAU7B,EAAEC,cAAcL,aAIhC,wBAAQF,KAAK,SAAS4C,SAAUL,EAAhC,SACGA,EACC,cAAC,IAAD,CAAQvC,KAAK,WAAW6C,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE3D,oBCrDK,SAASC,EAAT,GAAkC,IAAPC,EAAM,EAANA,GACxC,EACEnB,IADF,mBAAOH,EAAP,KAAmCuB,EAAnC,KAAwBX,UAExB,OACE,8BACGU,EAAGhD,KADN,KACcgD,EAAGxB,MACf,wBACEzB,KAAK,SACL,UAASiD,EAAGlD,GACZoD,QAAS,WACPxB,EAAcsB,EAAGlD,KAEnB6C,SAAUM,EANZ,SAQGA,EACC,cAAC,IAAD,CAAQlD,KAAK,WAAW6C,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE3D,cCIV,IAYexD,eAZS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMC,WAIS,SAACC,GAC1B,MAAO,CACLL,UAAW,SAACI,GAAD,OAAYC,EAASN,EAAQC,UAAUI,QAIvCF,EA7Bf,YAAkC,IAAXE,EAAU,EAAVA,OACrB,EAA+CmC,IAAvCwB,EAAR,EAAQA,KAAiBC,EAAzB,EAAcd,UACd,OACE,gCACGc,GACC,cAAC,IAAD,CAAQrD,KAAK,WAAW6C,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAE7DK,GACCA,EACG3D,QAAO,SAAC6D,GAAD,OACNA,EAAIrD,KAAKsD,cAAcC,SAAS/D,EAAO8D,kBAExCE,KAAI,SAACR,GAAD,OAAQ,cAACD,EAAD,CAA6BC,GAAIA,GAAXA,EAAGlD,aCHjC2D,I,EAAAA,EAZf,WACE,OACE,sBAAKhB,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCROiB,EAAgBC,wBAAc,GAAD,eACvCxE,EAAQC,WAAY,SAACG,EAAOqE,GAAR,OAAmBA,EAAOC,Y,QCCpCC,EAAQC,yBAAe,CAClCC,SAAO,mBACJzD,EAAYE,YAAcF,EAAYyD,SADlC,uBAEGN,GAFH,GAIPO,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAO5D,EAAY0D,eAG9CG,yBAAeN,EAAMrE,UCPrB4E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.44f010b8.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst setFilter = createAction(\"contacts/setFilter\");\r\n\r\nconst actions = { setFilter };\r\n\r\nexport default actions;\r\n","import shortid from \"shortid\";\nimport propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/actions\";\n\nfunction Filter({ filter, setFilter }) {\n  const filterInputId = shortid.generate();\n  return (\n    <div>\n      <label htmlFor={filterInputId}>Find contacts by name</label>\n      <input\n        id={filterInputId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Casnumbermore d'Artagnan и т. п.\"\n        onChange={(e) => setFilter(e.currentTarget.value)}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setFilter: (filter) => dispatch(actions.setFilter(filter)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: propTypes.string,\n  setFilter: propTypes.func.isRequired,\n};\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://619294dfd3ae6d0017da81e7.mockapi.io/api/v1\",\r\n  }),\r\n  tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    getContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: ({ name, phone }) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: { name, phone },\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/contacts/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactsApi;\r\n","import { useState, useRef } from \"react\";\nimport shortid from \"shortid\";\nimport Loader from \"react-loader-spinner\";\nimport { useAddContactMutation } from \"../../redux/contactsSlice\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = useRef(shortid.generate());\n  const numberInputId = useRef(shortid.generate());\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addContact({ name, phone: number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"input-wrapper\">\n        <label htmlFor={nameInputId}>Name</label>\n        <input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Casnumbermore d'Artagnan и т. п.\"\n          required\n          onChange={(e) => {\n            setName(e.currentTarget.value);\n          }}\n        />\n      </div>\n      <div className=\"input-wrapper\">\n        {\" \"}\n        <label htmlFor={numberInputId}>Number</label>\n        <input\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={(e) => {\n            setNumber(e.currentTarget.value);\n          }}\n        />\n      </div>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? (\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={20} width={85} />\n        ) : (\n          \"Add contact\"\n        )}\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import Loader from \"react-loader-spinner\";\r\nimport { useDeleteContactMutation } from \"../../redux/contactsSlice\";\r\n\r\nexport default function ContactListItem({ el }) {\r\n  const [deleteContact, { isLoading: deleteIsLoading }] =\r\n    useDeleteContactMutation();\r\n  return (\r\n    <p>\r\n      {el.name}: {el.phone}\r\n      <button\r\n        type=\"button\"\r\n        data-id={el.id}\r\n        onClick={() => {\r\n          deleteContact(el.id);\r\n        }}\r\n        disabled={deleteIsLoading}\r\n      >\r\n        {deleteIsLoading ? (\r\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={15} width={45} />\r\n        ) : (\r\n          \"Delete\"\r\n        )}\r\n      </button>\r\n    </p>\r\n  );\r\n}\r\n","import propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport { useGetContactsQuery } from \"../../redux/contactsSlice\";\nimport actions from \"../../redux/actions\";\nimport ContactListItem from \"./ContactListItem\";\n\nfunction ContactList({ filter }) {\n  const { data, isLoading: contactsIsLoading } = useGetContactsQuery();\n  return (\n    <div>\n      {contactsIsLoading && (\n        <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n      )}\n      {data &&\n        data\n          .filter((obj) =>\n            obj.name.toLowerCase().includes(filter.toLowerCase())\n          )\n          .map((el) => <ContactListItem key={el.id} el={el} />)}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setFilter: (filter) => dispatch(actions.setFilter(filter)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  filter: propTypes.string.isRequired,\n};\n","import Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  [actions.setFilter]: (state, action) => action.payload,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { filterReducer } from \"./reducers\";\r\nimport { contactsApi } from \"./contactsSlice\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(contactsApi.middleware),\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}