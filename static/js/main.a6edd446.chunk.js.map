{"version":3,"sources":["redux/slices.js","redux/operations.js","redux/store.js","redux/selectors.js","components/UserMenu/UserMenu.js","components/PrivateRoute.js","components/RestrictedRoute.js","components/Contacts/Filter/Filter.js","components/Contacts/ContactForm/ContactForm.js","components/Contacts/ContactList/ContactListItem.js","components/Contacts/ContactList/ContactList.js","components/Contacts/Contacts.js","Pages/LoginPage.js","Pages/HomePage.js","Pages/SignupPage.js","App.js","index.js"],"names":["filterSlice","createSlice","name","initialState","reducers","setFilter","state","action","payload","authSlice","token","isLoggedIn","setCredentials","user","setUser","setLogout","actions","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","auth","set","tagTypes","endpoints","builder","signup","mutation","query","userData","url","method","body","login","logout","getUser","getContacts","providesTags","addContact","number","invalidatesTags","deleteContact","id","useSignupMutation","useLoginMutation","useLogoutMutation","useGetUserQuery","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","persistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","setupListeners","dispatch","persistor","persistStore","selectors","getFilter","filter","getIsLoggedIn","getToken","UserMenu","useDispatch","useSelector","useLogout","isLoading","to","type","onClick","disabled","PrivateRoute","children","redirectTo","RestrictedRoute","Filter","filterInputId","shortid","generate","htmlFor","value","pattern","title","onChange","e","currentTarget","ContactForm","useState","setName","setNumber","nameInputId","useRef","numberInputId","onSubmit","preventDefault","className","required","color","height","width","ContactListItem","el","deleteIsLoading","phone","ContactList","data","contactsIsLoading","obj","toLowerCase","includes","map","Contacts","LoginPage","email","setEmail","password","setPassword","useLogin","handleSubmit","a","unwrap","console","log","autoComplete","target","HomePage","SignupPage","useSignup","autoFocus","App","useEffect","path","element","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"yRAEaA,EAAcC,sBAAY,CACrCC,KAAM,SACNC,aAAc,GACdC,SAAU,CACRC,UAAW,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,YAU5BC,EAAYR,sBAAY,CACnCC,KAAM,OACNC,aARmB,CACnBD,KAAM,GACNQ,MAAO,GACPC,YAAY,GAMZP,SAAU,CACRQ,eAAgB,SAACN,EAAD,GAA0C,IAAD,IAA/BE,QAAWK,EAAoB,EAApBA,KAAMH,EAAc,EAAdA,MACzCJ,EAAMJ,KAAOW,EAAKX,KAClBI,EAAMI,MAAQA,EACdJ,EAAMK,YAAa,GAErBG,QAAS,SAACR,EAAOE,GACfF,EAAMJ,KAAOM,EAAQN,KACrBI,EAAMK,YAAa,GAErBI,UAAW,SAACT,EAAOE,GACjBF,EAAMJ,KAAO,GACbI,EAAMI,MAAQ,GACdJ,EAAMK,YAAa,MAKVN,EAAcL,EAAYgB,QAA1BX,UACR,EAA+CI,EAAUO,QAAjDJ,EAAR,EAAQA,eAAgBE,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,U,gBCpC3BE,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,wCACTC,eAAgB,SAACC,EAAD,GAA4B,IACpCd,GAAQe,EAD2B,EAAfA,YACDC,KAAKhB,MAI9B,OAHIA,GACFc,EAAQG,IAAI,gBAAZ,iBAAuCjB,IAElCc,KAGXI,SAAU,CAAC,YACXC,UAAW,SAACC,GAAD,MAAc,CACvBC,OAAQD,EAAQE,SAAS,CACvBC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,gBACLC,OAAQ,OACRC,KAAMH,MAGVI,MAAOR,EAAQE,SAAS,CACtBC,MAAO,SAACC,GAAD,MAAe,CACpBC,IAAK,eACLC,OAAQ,OACRC,KAAMH,MAGVK,OAAQT,EAAQE,SAAS,CACvBC,MAAO,iBAAO,CACZE,IAAK,gBACLC,OAAQ,WAGZI,QAASV,EAAQG,MAAM,CACrBA,MAAO,iBAAM,oBAEfQ,YAAaX,EAAQG,MAAM,CACzBA,MAAO,8BACPS,aAAc,CAAC,cAEjBC,WAAYb,EAAQE,SAAS,CAC3BC,MAAO,kBAAuB,CAC5BE,IAAK,YACLC,OAAQ,OACRC,KAAM,CAAEnC,KAHH,EAAGA,KAGM0C,OAHT,EAASA,UAKhBC,gBAAiB,CAAC,cAEpBC,cAAehB,EAAQE,SAAS,CAC9BC,MAAO,SAACc,GAAD,MAAS,CACdZ,IAAI,aAAD,OAAeY,GAClBX,OAAQ,WAEVS,gBAAiB,CAAC,kBAMtBG,EAOE/B,EAPF+B,kBACAC,EAMEhC,EANFgC,iBACAC,EAKEjC,EALFiC,kBACAC,EAIElC,EAJFkC,gBACAC,EAGEnC,EAHFmC,oBACAC,EAEEpC,EAFFoC,sBACAC,EACErC,EADFqC,yBCpDIC,EAAgB,CACpBC,IAAK,WACLC,YACAC,UAAW,CAAC,UAGDC,EAAQC,yBAAe,CAClCC,SAAO,mBACJ5C,EAAYE,YAAcF,EAAY4C,SADlC,uBAEG7D,EAAY6D,SAFf,qBAGCC,YAAeP,EAAe9C,EAAUoD,UAHzC,GAKPE,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE3DC,OAAOxD,EAAY8C,eAG1BW,yBAAef,EAAMgB,UAEd,IAAMC,EAAYC,YAAalB,G,uBC9BvBmB,EAFG,CAAEC,UANF,SAACzE,GAAD,OAAWA,EAAM0E,QAMJC,cAJT,SAAC3E,GAAD,OAAWA,EAAMoB,KAAKf,YAIEuE,SAF7B,SAAC5E,GAAD,OAAWA,EAAMoB,KAAKhB,Q,OCiCxByE,MA/Bf,WACE,IAAMR,EAAWS,cACXzE,EAAa0E,YAAYP,EAAUG,eACzC,EAAmC/B,IAAnC,mBAAOoC,EAAP,KAAoBC,EAApB,KAAoBA,UAMpB,OACE,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,wBACC7E,EACC,wBAAQ8E,KAAK,SAASC,QAVR,WAElBJ,IACAX,EAAS5D,MAOuC4E,SAAUJ,EAAtD,qBAIA,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,SAAT,wBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,+B,OCzBG,SAASI,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,SAA8B,IAApBC,kBAAoB,MAAP,IAAO,EAEnE,OADmBT,YAAYP,EAAUG,eACrBY,EAAW,cAAC,IAAD,CAAUL,GAAIM,ICFhC,SAASC,EAAT,GAA0D,IAA/BF,EAA8B,EAA9BA,SAA8B,IAApBC,kBAAoB,MAAP,IAAO,EAEtE,OADmBT,YAAYP,EAAUG,eACT,cAAC,IAAD,CAAUO,GAAIM,IAAzBD,E,qBCmBRG,MApBf,WACE,IAAMrB,EAAWS,cACXJ,EAASK,YAAYP,EAAUC,WAC/BkB,EAAgBC,IAAQC,WAC9B,OACE,gCACE,uBAAOC,QAASH,EAAhB,mCACA,uBACElD,GAAIkD,EACJR,KAAK,OACLvF,KAAK,SACLmG,MAAOrB,EACPsB,QAAQ,yHACRC,MAAM,qcACNC,SAAU,SAACC,GAAD,OAAO9B,EAAStE,EAAUoG,EAAEC,cAAcL,e,iBC4C7CM,MA1Df,WACE,MAAwBC,mBAAS,IAAjC,mBAAO1G,EAAP,KAAa2G,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOhE,EAAP,KAAekE,EAAf,KACMC,EAAcC,iBAAOd,IAAQC,YAC7Bc,EAAgBD,iBAAOd,IAAQC,YACrC,EAAoC9C,IAApC,mBAAOV,EAAP,KAAqB4C,EAArB,KAAqBA,UASrB,OACE,uBAAM2B,SARa,SAACT,GACpBA,EAAEU,iBACFxE,EAAW,CAAEzC,OAAM0C,WACnBiE,EAAQ,IACRC,EAAU,KAIV,UACE,sBAAKM,UAAU,gBAAf,UACE,uBAAOhB,QAASW,EAAhB,kBACA,uBACEhE,GAAIgE,EACJtB,KAAK,OACLvF,KAAK,OACLmG,MAAOnG,EACPoG,QAAQ,yHACRC,MAAM,qcACNc,UAAQ,EACRb,SAAU,SAACC,GACTI,EAAQJ,EAAEC,cAAcL,aAI9B,sBAAKe,UAAU,gBAAf,UACG,IACD,uBAAOhB,QAASa,EAAhB,oBACA,uBACElE,GAAIkE,EACJxB,KAAK,MACLvF,KAAK,SACLmG,MAAOzD,EACP0D,QAAQ,yFACRC,MAAM,giBACNc,UAAQ,EACRb,SAAU,SAACC,GACTK,EAAUL,EAAEC,cAAcL,aAIhC,wBAAQZ,KAAK,SAASE,SAAUJ,EAAhC,SACGA,EACC,cAAC,IAAD,CAAQE,KAAK,WAAW6B,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE3D,oBCrDK,SAASC,EAAT,GAAkC,IAAPC,EAAM,EAANA,GACxC,EACEpE,IADF,mBAAOR,EAAP,KAAmC6E,EAAnC,KAAwBpC,UAExB,OACE,8BACGmC,EAAGxH,KADN,KACcwH,EAAGE,MACf,wBACEnC,KAAK,SACL,UAASiC,EAAG3E,GACZ2C,QAAS,WACP5C,EAAc4E,EAAG3E,KAEnB4C,SAAUgC,EANZ,SAQGA,EACC,cAAC,IAAD,CAAQlC,KAAK,WAAW6B,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE3D,cCIKK,MAlBf,WACE,IAAM7C,EAASK,YAAYP,EAAUC,WACrC,EAA+C3B,IAAvC0E,EAAR,EAAQA,KAAiBC,EAAzB,EAAcxC,UACd,OACE,gCACGwC,GACC,cAAC,IAAD,CAAQtC,KAAK,WAAW6B,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAE7DM,GACCA,EACG9C,QAAO,SAACgD,GAAD,OACNA,EAAI9H,KAAK+H,cAAcC,SAASlD,EAAOiD,kBAExCE,KAAI,SAACT,GAAD,OAAQ,cAACD,EAAD,CAA6BC,GAAIA,GAAXA,EAAG3E,WCfjC,SAASqF,IACtB,OACE,qCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,O,iCCNS,SAASC,KACtB,IAAM1D,EAAWS,cACjB,EAA0BwB,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcC,EAAd,KACA,EAAgC3B,mBAAS,IAAzC,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAAmBxF,IAAZyF,EAAP,oBAEMC,EAAY,yCAAG,WAAOlC,GAAP,gBAAAmC,EAAA,6DACnBnC,EAAEU,iBADiB,kBAIMuB,EAAS,CAAEJ,QAAOE,aAAYK,SAJpC,OAIX3G,EAJW,OAKjByC,EAAS/D,EAAesB,IALP,gDAOjB4G,QAAQC,IAAR,MAPiB,QASnBR,EAAS,IACTE,EAAY,IAVO,yDAAH,sDAYlB,OACE,8BACE,uBAAMvI,KAAK,aAAa8I,aAAa,KAAK9B,SAAUyB,EAApD,UACE,0CAEE,uBACElD,KAAK,QACLvF,KAAK,QACLmG,MAAOiC,EACP9B,SAAU,SAACC,GAAD,OAAO8B,EAAS9B,EAAEwC,OAAO5C,aAIvC,6CAEE,uBACEZ,KAAK,WACLvF,KAAK,WACLmG,MAAOmC,EACPhC,SAAU,SAACC,GAAD,OAAOgC,EAAYhC,EAAEwC,OAAO5C,aAI1C,wBAAQZ,KAAK,SAAb,yBC9CO,SAASyD,KACtB,OAAO,0DCIM,SAASC,KACtB,IAAMxE,EAAWS,cACjB,EAAwBwB,mBAAS,IAAjC,mBAAO1G,EAAP,KAAa2G,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcC,EAAd,KACA,EAAgC3B,mBAAS,IAAzC,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAAoBzF,IAAboG,EAAP,oBAEMT,EAAY,yCAAG,WAAOlC,GAAP,gBAAAmC,EAAA,6DACnBnC,EAAEU,iBADiB,kBAIMiC,EAAU,CAAElJ,OAAMoI,QAAOE,aAAYK,SAJ3C,OAIX3G,EAJW,OAKjByC,EAAS/D,EAAesB,IALP,gDAOjB4G,QAAQC,IAAR,MAPiB,QASnBlC,EAAQ,IACR0B,EAAS,IACTE,EAAY,IAXO,yDAAH,sDAclB,OACE,8BACE,uBAAMvI,KAAK,cAAc8I,aAAa,KAAK9B,SAAUyB,EAArD,UACE,yCAEE,uBACElD,KAAK,OACLvF,KAAK,OACLmG,MAAOnG,EACPmJ,WAAS,EACT7C,SAAU,SAACC,GAAD,OAAOI,EAAQJ,EAAEwC,OAAO5C,aAItC,0CAEE,uBACEZ,KAAK,QACLvF,KAAK,QACLmG,MAAOiC,EACP9B,SAAU,SAACC,GAAD,OAAO8B,EAAS9B,EAAEwC,OAAO5C,aAIvC,6CAEE,uBACEZ,KAAK,WACLvF,KAAK,WACLmG,MAAOmC,EACPhC,SAAU,SAACC,GAAD,OAAOgC,EAAYhC,EAAEwC,OAAO5C,aAI1C,wBAAQZ,KAAK,SAAb,0BCHO6D,OA5Cf,WACE,IAAM3E,EAAWS,cACT0C,EAAS3E,IAAT2E,KAMR,OAJAyB,qBAAU,WACRzB,GAAQnD,EAAS7D,EAAQgH,MACxB,CAACA,EAAMnD,IAGR,qBAAKyC,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoC,KAAK,IAAIC,QAAS,cAACP,GAAD,MACzB,cAAC,IAAD,CACEM,KAAK,WACLC,QACE,cAAC7D,EAAD,CAAcE,WAAW,SAAzB,SACE,cAACsC,EAAD,QAIN,cAAC,IAAD,CACEoB,KAAK,QACLC,QACE,cAAC1D,EAAD,UACE,cAACsC,GAAD,QAIN,cAAC,IAAD,CACEmB,KAAK,SACLC,QACE,cAAC1D,EAAD,UACE,cAACoD,GAAD,iBCtChBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjG,MAAOA,EAAjB,SACE,cAAC,cAAD,CAAakG,QAAQ,OAAOjF,UAAWA,EAAvC,SACE,cAAC,GAAD,UAINkF,SAASC,eAAe,W","file":"static/js/main.a6edd446.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    setFilter: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setCredentials: (state, { payload: { user, token } }) => {\r\n      state.name = user.name;\r\n      state.token = token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    setUser: (state, payload) => {\r\n      state.name = payload.name;\r\n      state.isLoggedIn = true;\r\n    },\r\n    setLogout: (state, payload) => {\r\n      state.name = \"\";\r\n      state.token = \"\";\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setFilter } = filterSlice.actions;\r\nexport const { setCredentials, setUser, setLogout } = authSlice.actions;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://connections-api.herokuapp.com\",\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token;\r\n      if (token) {\r\n        headers.set(\"authorization\", `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    signup: builder.mutation({\r\n      query: (userData) => ({\r\n        url: \"/users/signup\",\r\n        method: \"POST\",\r\n        body: userData,\r\n      }),\r\n    }),\r\n    login: builder.mutation({\r\n      query: (userData) => ({\r\n        url: \"/users/login\",\r\n        method: \"POST\",\r\n        body: userData,\r\n      }),\r\n    }),\r\n    logout: builder.mutation({\r\n      query: () => ({\r\n        url: \"/users/logout\",\r\n        method: \"POST\",\r\n      }),\r\n    }),\r\n    getUser: builder.query({\r\n      query: () => \"/users/current\",\r\n    }),\r\n    getContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: { name, number },\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/contacts/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useSignupMutation,\r\n  useLoginMutation,\r\n  useLogoutMutation,\r\n  useGetUserQuery,\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactsApi;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport persistReducer from \"redux-persist/es/persistReducer\";\r\nimport { filterSlice, authSlice } from \"./slices\";\r\nimport { contactsApi } from \"./operations\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterSlice.reducer,\r\n    auth: persistReducer(persistConfig, authSlice.reducer),\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(contactsApi.middleware),\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n\r\nexport const persistor = persistStore(store);\r\n","const getFilter = (state) => state.filter;\r\n\r\nconst getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\n\r\nconst getToken = (state) => state.auth.token;\r\n\r\nconst selectors = { getFilter, getIsLoggedIn, getToken };\r\n\r\nexport default selectors;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport selectors from \"../../redux/selectors\";\r\nimport { useLogoutMutation } from \"../../redux/operations\";\r\nimport { setLogout } from \"../../redux/slices\";\r\n\r\nfunction UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(selectors.getIsLoggedIn);\r\n  const [useLogout, { isLoading }] = useLogoutMutation();\r\n  const handleClick = () => {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useLogout();\r\n    dispatch(setLogout());\r\n  };\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Home </Link>\r\n      <Link to=\"/contacts\"> Contacts </Link>\r\n      {isLoggedIn ? (\r\n        <button type=\"button\" onClick={handleClick} disabled={isLoading}>\r\n          Log Out\r\n        </button>\r\n      ) : (\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/login\"> Log In </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/signup\"> Sign up</Link>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserMenu;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\nimport selectors from \"../redux/selectors\";\r\n\r\nexport default function PrivateRoute({ children, redirectTo = \"/\" }) {\r\n  const isLoggedIn = useSelector(selectors.getIsLoggedIn);\r\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\nimport selectors from \"../redux/selectors\";\r\n\r\nexport default function RestrictedRoute({ children, redirectTo = \"/\" }) {\r\n  const isLoggedIn = useSelector(selectors.getIsLoggedIn);\r\n  return !isLoggedIn ? children : <Navigate to={redirectTo} />;\r\n}\r\n","import shortid from \"shortid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../../../redux/slices\";\nimport selectors from \"../../../redux/selectors\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectors.getFilter);\n  const filterInputId = shortid.generate();\n  return (\n    <div>\n      <label htmlFor={filterInputId}>Find contacts by name</label>\n      <input\n        id={filterInputId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Casnumbermore d'Artagnan и т. п.\"\n        onChange={(e) => dispatch(setFilter(e.currentTarget.value))}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import { useState, useRef } from \"react\";\nimport shortid from \"shortid\";\nimport Loader from \"react-loader-spinner\";\nimport { useAddContactMutation } from \"../../../redux/operations\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = useRef(shortid.generate());\n  const numberInputId = useRef(shortid.generate());\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addContact({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"input-wrapper\">\n        <label htmlFor={nameInputId}>Name</label>\n        <input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Casnumbermore d'Artagnan и т. п.\"\n          required\n          onChange={(e) => {\n            setName(e.currentTarget.value);\n          }}\n        />\n      </div>\n      <div className=\"input-wrapper\">\n        {\" \"}\n        <label htmlFor={numberInputId}>Number</label>\n        <input\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={(e) => {\n            setNumber(e.currentTarget.value);\n          }}\n        />\n      </div>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? (\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={20} width={85} />\n        ) : (\n          \"Add contact\"\n        )}\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import Loader from \"react-loader-spinner\";\r\nimport { useDeleteContactMutation } from \"../../../redux/operations\";\r\n\r\nexport default function ContactListItem({ el }) {\r\n  const [deleteContact, { isLoading: deleteIsLoading }] =\r\n    useDeleteContactMutation();\r\n  return (\r\n    <p>\r\n      {el.name}: {el.phone}\r\n      <button\r\n        type=\"button\"\r\n        data-id={el.id}\r\n        onClick={() => {\r\n          deleteContact(el.id);\r\n        }}\r\n        disabled={deleteIsLoading}\r\n      >\r\n        {deleteIsLoading ? (\r\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={15} width={45} />\r\n        ) : (\r\n          \"Delete\"\r\n        )}\r\n      </button>\r\n    </p>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport { useGetContactsQuery } from \"../../../redux/operations\";\nimport ContactListItem from \"./ContactListItem\";\nimport selectors from \"../../../redux/selectors\";\n\nfunction ContactList() {\n  const filter = useSelector(selectors.getFilter);\n  const { data, isLoading: contactsIsLoading } = useGetContactsQuery();\n  return (\n    <div>\n      {contactsIsLoading && (\n        <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n      )}\n      {data &&\n        data\n          .filter((obj) =>\n            obj.name.toLowerCase().includes(filter.toLowerCase())\n          )\n          .map((el) => <ContactListItem key={el.id} el={el} />)}\n    </div>\n  );\n}\n\nexport default ContactList;\n","import Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLoginMutation } from \"../redux/operations\";\r\nimport { setCredentials } from \"../redux/slices\";\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [useLogin] = useLoginMutation();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const userData = await useLogin({ email, password }).unwrap();\r\n      dispatch(setCredentials(userData));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form name=\"login_form\" autoComplete=\"on\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default function HomePage() {\r\n  return <h1>Welcome to Contacts App!</h1>;\r\n}\r\n","import { useState } from \"react\";\r\nimport { useSignupMutation } from \"../redux/operations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCredentials } from \"../redux/slices\";\r\n\r\nexport default function SignupPage() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [useSignup] = useSignupMutation();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const userData = await useSignup({ name, email, password }).unwrap();\r\n      dispatch(setCredentials(userData));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form name=\"signup_form\" autoComplete=\"on\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            autoFocus\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import UserMenu from \"./components/UserMenu/UserMenu\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport RestrictedRoute from \"./components/RestrictedRoute\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport SignupPage from \"./Pages/SignupPage\";\nimport { useEffect } from \"react\";\nimport { useGetUserQuery } from \"./redux/operations\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"./redux/slices\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { data } = useGetUserQuery();\n\n  useEffect(() => {\n    data && dispatch(setUser(data));\n  }, [data, dispatch]);\n\n  return (\n    <div className=\"container\">\n      <BrowserRouter>\n        <UserMenu />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route\n            path=\"contacts\"\n            element={\n              <PrivateRoute redirectTo=\"/login\">\n                <Contacts />\n              </PrivateRoute>\n            }\n          />\n          <Route\n            path=\"login\"\n            element={\n              <RestrictedRoute>\n                <LoginPage />\n              </RestrictedRoute>\n            }\n          />\n          <Route\n            path=\"signup\"\n            element={\n              <RestrictedRoute>\n                <SignupPage />\n              </RestrictedRoute>\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading=\"null\" persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}